//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Repository.edmx
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Core.Objects.DataClasses;
    using System.Linq;
    
    public partial class PortalContext : DbContext
    {
    public PortalContext(string connectionString)
                : base(connectionString)
            {
            }
    
        public PortalContext()
            : base("name=PortalContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CashResult> CashResults { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<CategoryType> CategoryTypes { get; set; }
        public DbSet<Customer_School> Customer_School { get; set; }
        public DbSet<CustomerLog> CustomerLogs { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<District> Districts { get; set; }
        public DbSet<DistrictOption> DistrictOptions { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<Grade> Grades { get; set; }
        public DbSet<SchoolOption> SchoolOptions { get; set; }
        public DbSet<School> Schools { get; set; }
        public DbSet<CashierPayment> CashierPayments { get; set; }
        public DbSet<CustomerActivity> CustomerActivities { get; set; }
        public DbSet<DailyCashier> DailyCashiers { get; set; }
        public DbSet<DepositTicket> DepositTickets { get; set; }
        public DbSet<DetailCafeCashier> DetailCafeCashiers { get; set; }
        public DbSet<DetailCafeCategory> DetailCafeCategories { get; set; }
        public DbSet<DetailCafeNetChange> DetailCafeNetChanges { get; set; }
        public DbSet<VoidsD> VoidsDS { get; set; }
        public DbSet<Item> Items { get; set; }
        public DbSet<Menu> Menus { get; set; }
        public DbSet<POS> POS { get; set; }
        public DbSet<Homeroom> Homerooms { get; set; }
        public DbSet<CustomerBalance> CustomerBalances { get; set; }
        public DbSet<CustomerRoster> CustomerRosters { get; set; }
        public DbSet<DetailCafeSummary> DetailCafeSummaries { get; set; }
        public DbSet<SalesTaxOnOrder> SalesTaxOnOrders { get; set; }
        public DbSet<StatementDetailItem> StatementDetailItems { get; set; }
        public DbSet<SoldItem> SoldItems { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<StatementDetailOrder> StatementDetailOrders { get; set; }
        public DbSet<SystemOptions> SystemOptions { get; set; }
        public DbSet<App_Ethnicity> App_Ethnicity { get; set; }
        public DbSet<Income_Frequencies> Income_Frequencies { get; set; }
        public DbSet<Income_Types> Income_Types { get; set; }
        public DbSet<Races> Races { get; set; }
        public DbSet<App_Member_Incomes> App_Member_Incomes { get; set; }
        public DbSet<App_Members> App_Members { get; set; }
        public DbSet<App_Races> App_Races { get; set; }
        public DbSet<App_Signers> App_Signers { get; set; }
        public DbSet<App_Statuses> App_Statuses { get; set; }
        public DbSet<Member> Members { get; set; }
        public DbSet<Applications> Applications { get; set; }
        public DbSet<App_Member_Statuses> App_Member_Statuses { get; set; }
        public DbSet<App_Notes> App_Notes { get; set; }
        public DbSet<School_Tax> School_Tax { get; set; }
        public DbSet<TaxEntities> TaxEntities { get; set; }
        public DbSet<School_Tax1> School_Tax1Set { get; set; }
        public DbSet<TaxEntities1> TaxEntities1Set { get; set; }
        public DbSet<Customer_POSNotification> Customer_POSNotification { get; set; }
        public DbSet<POSNotifications> POSNotifications { get; set; }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "AccountBalances")]
        public virtual IQueryable<AccountBalances_Result> AccountBalances(Nullable<long> clientID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> orderDate, string sCHLIST)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var sCHLISTParameter = sCHLIST != null ?
                new ObjectParameter("SCHLIST", sCHLIST) :
                new ObjectParameter("SCHLIST", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AccountBalances_Result>("[PortalContext].[AccountBalances](@ClientID, @StartDate, @EndDate, @OrderDate, @SCHLIST)", clientIDParameter, startDateParameter, endDateParameter, orderDateParameter, sCHLISTParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Customer_Balance")]
        public virtual IQueryable<Admin_Customer_Balance_Result> Admin_Customer_Balance(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Customer_Balance_Result>("[PortalContext].[Admin_Customer_Balance](@ClientID)", clientIDParameter);
        }
    
        public virtual ObjectResult<Admin_Customer_Delete_Result> Admin_Customer_Delete(Nullable<long> clientID, Nullable<int> customerID, Nullable<bool> overrideBalance, Nullable<bool> overrideEmployee, Nullable<bool> overrideOrders, Nullable<bool> overrideBonusPayments, Nullable<bool> overridePreorders, Nullable<bool> overrideStudentApp)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var overrideBalanceParameter = overrideBalance.HasValue ?
                new ObjectParameter("OverrideBalance", overrideBalance) :
                new ObjectParameter("OverrideBalance", typeof(bool));
    
            var overrideEmployeeParameter = overrideEmployee.HasValue ?
                new ObjectParameter("OverrideEmployee", overrideEmployee) :
                new ObjectParameter("OverrideEmployee", typeof(bool));
    
            var overrideOrdersParameter = overrideOrders.HasValue ?
                new ObjectParameter("OverrideOrders", overrideOrders) :
                new ObjectParameter("OverrideOrders", typeof(bool));
    
            var overrideBonusPaymentsParameter = overrideBonusPayments.HasValue ?
                new ObjectParameter("OverrideBonusPayments", overrideBonusPayments) :
                new ObjectParameter("OverrideBonusPayments", typeof(bool));
    
            var overridePreordersParameter = overridePreorders.HasValue ?
                new ObjectParameter("OverridePreorders", overridePreorders) :
                new ObjectParameter("OverridePreorders", typeof(bool));
    
            var overrideStudentAppParameter = overrideStudentApp.HasValue ?
                new ObjectParameter("OverrideStudentApp", overrideStudentApp) :
                new ObjectParameter("OverrideStudentApp", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Customer_Delete_Result>("Admin_Customer_Delete", clientIDParameter, customerIDParameter, overrideBalanceParameter, overrideEmployeeParameter, overrideOrdersParameter, overrideBonusPaymentsParameter, overridePreordersParameter, overrideStudentAppParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Customer_List")]
        public virtual IQueryable<Admin_Customer_List_Result> Admin_Customer_List(Nullable<long> clientID, string searchString, Nullable<int> searchBy, string filterString, Nullable<int> filterBy)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(int));
    
            var filterStringParameter = filterString != null ?
                new ObjectParameter("FilterString", filterString) :
                new ObjectParameter("FilterString", typeof(string));
    
            var filterByParameter = filterBy.HasValue ?
                new ObjectParameter("FilterBy", filterBy) :
                new ObjectParameter("FilterBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Customer_List_Result>("[PortalContext].[Admin_Customer_List](@ClientID, @SearchString, @SearchBy, @FilterString, @FilterBy)", clientIDParameter, searchStringParameter, searchByParameter, filterStringParameter, filterByParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Customer_Logs")]
        public virtual IQueryable<Admin_Customer_Logs_Result> Admin_Customer_Logs(Nullable<long> clientID, Nullable<int> customerID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Customer_Logs_Result>("[PortalContext].[Admin_Customer_Logs](@ClientID, @CustomerID)", clientIDParameter, customerIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_District_List")]
        public virtual IQueryable<Admin_District_List_Result> Admin_District_List(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_District_List_Result>("[PortalContext].[Admin_District_List](@ClientID)", clientIDParameter);
        }

        public virtual ObjectResult<string> Admin_District_Save(Nullable<long> clientID, Nullable<int> districtID, string districtName, Nullable<bool> employeeTaxable, Nullable<bool> freeTaxable, Nullable<bool> paidTaxable, Nullable<bool> redTaxable, Nullable<bool> mealPlanTaxable, Nullable<bool> guestTaxable, Nullable<bool> studentCashTaxable, Nullable<bool> deleted, Nullable<int> empAdminID, Nullable<int> empDirectorID, string distAddr1, string distAddr2, string distCity, string distState, string distZip, string distPhone1, string distPhone2, string bankName, string bankAddr1, string bankAddr2, string bankCity, string bankState, string bankZip, string bankRoute, string bankAccount, Nullable<System.DateTime> fiscalYearStart, Nullable<System.DateTime> fiscalYearEnd, Nullable<System.DateTime> localTime, ObjectParameter newDistrictId)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));

            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));

            var districtNameParameter = districtName != null ?
                new ObjectParameter("DistrictName", districtName) :
                new ObjectParameter("DistrictName", typeof(string));

            var employeeTaxableParameter = employeeTaxable.HasValue ?
                new ObjectParameter("EmployeeTaxable", employeeTaxable) :
                new ObjectParameter("EmployeeTaxable", typeof(bool));

            var freeTaxableParameter = freeTaxable.HasValue ?
                new ObjectParameter("FreeTaxable", freeTaxable) :
                new ObjectParameter("FreeTaxable", typeof(bool));

            var paidTaxableParameter = paidTaxable.HasValue ?
                new ObjectParameter("PaidTaxable", paidTaxable) :
                new ObjectParameter("PaidTaxable", typeof(bool));

            var redTaxableParameter = redTaxable.HasValue ?
                new ObjectParameter("RedTaxable", redTaxable) :
                new ObjectParameter("RedTaxable", typeof(bool));

            var mealPlanTaxableParameter = mealPlanTaxable.HasValue ?
                new ObjectParameter("MealPlanTaxable", mealPlanTaxable) :
                new ObjectParameter("MealPlanTaxable", typeof(bool));

            var guestTaxableParameter = guestTaxable.HasValue ?
                new ObjectParameter("GuestTaxable", guestTaxable) :
                new ObjectParameter("GuestTaxable", typeof(bool));

            var studentCashTaxableParameter = studentCashTaxable.HasValue ?
                new ObjectParameter("StudentCashTaxable", studentCashTaxable) :
                new ObjectParameter("StudentCashTaxable", typeof(bool));

            var deletedParameter = deleted.HasValue ?
                new ObjectParameter("Deleted", deleted) :
                new ObjectParameter("Deleted", typeof(bool));

            var empAdminIDParameter = empAdminID.HasValue ?
                new ObjectParameter("EmpAdminID", empAdminID) :
                new ObjectParameter("EmpAdminID", typeof(int));

            var empDirectorIDParameter = empDirectorID.HasValue ?
                new ObjectParameter("EmpDirectorID", empDirectorID) :
                new ObjectParameter("EmpDirectorID", typeof(int));

            var distAddr1Parameter = distAddr1 != null ?
                new ObjectParameter("DistAddr1", distAddr1) :
                new ObjectParameter("DistAddr1", typeof(string));

            var distAddr2Parameter = distAddr2 != null ?
                new ObjectParameter("DistAddr2", distAddr2) :
                new ObjectParameter("DistAddr2", typeof(string));

            var distCityParameter = distCity != null ?
                new ObjectParameter("DistCity", distCity) :
                new ObjectParameter("DistCity", typeof(string));

            var distStateParameter = distState != null ?
                new ObjectParameter("DistState", distState) :
                new ObjectParameter("DistState", typeof(string));

            var distZipParameter = distZip != null ?
                new ObjectParameter("DistZip", distZip) :
                new ObjectParameter("DistZip", typeof(string));

            var distPhone1Parameter = distPhone1 != null ?
                new ObjectParameter("DistPhone1", distPhone1) :
                new ObjectParameter("DistPhone1", typeof(string));

            var distPhone2Parameter = distPhone2 != null ?
                new ObjectParameter("DistPhone2", distPhone2) :
                new ObjectParameter("DistPhone2", typeof(string));

            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));

            var bankAddr1Parameter = bankAddr1 != null ?
                new ObjectParameter("BankAddr1", bankAddr1) :
                new ObjectParameter("BankAddr1", typeof(string));

            var bankAddr2Parameter = bankAddr2 != null ?
                new ObjectParameter("BankAddr2", bankAddr2) :
                new ObjectParameter("BankAddr2", typeof(string));

            var bankCityParameter = bankCity != null ?
                new ObjectParameter("BankCity", bankCity) :
                new ObjectParameter("BankCity", typeof(string));

            var bankStateParameter = bankState != null ?
                new ObjectParameter("BankState", bankState) :
                new ObjectParameter("BankState", typeof(string));

            var bankZipParameter = bankZip != null ?
                new ObjectParameter("BankZip", bankZip) :
                new ObjectParameter("BankZip", typeof(string));

            var bankRouteParameter = bankRoute != null ?
                new ObjectParameter("BankRoute", bankRoute) :
                new ObjectParameter("BankRoute", typeof(string));

            var bankAccountParameter = bankAccount != null ?
                new ObjectParameter("BankAccount", bankAccount) :
                new ObjectParameter("BankAccount", typeof(string));

            var fiscalYearStartParameter = fiscalYearStart.HasValue ?
                new ObjectParameter("FiscalYearStart", fiscalYearStart) :
                new ObjectParameter("FiscalYearStart", typeof(System.DateTime));

            var fiscalYearEndParameter = fiscalYearEnd.HasValue ?
                new ObjectParameter("FiscalYearEnd", fiscalYearEnd) :
                new ObjectParameter("FiscalYearEnd", typeof(System.DateTime));

            var localTimeParameter = localTime.HasValue ?
                new ObjectParameter("LocalTime", localTime) :
                new ObjectParameter("LocalTime", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Admin_District_Save", clientIDParameter, districtIDParameter, districtNameParameter, employeeTaxableParameter, freeTaxableParameter, paidTaxableParameter, redTaxableParameter, mealPlanTaxableParameter, guestTaxableParameter, studentCashTaxableParameter, deletedParameter, empAdminIDParameter, empDirectorIDParameter, distAddr1Parameter, distAddr2Parameter, distCityParameter, distStateParameter, distZipParameter, distPhone1Parameter, distPhone2Parameter, bankNameParameter, bankAddr1Parameter, bankAddr2Parameter, bankCityParameter, bankStateParameter, bankZipParameter, bankRouteParameter, bankAccountParameter, fiscalYearStartParameter, fiscalYearEndParameter, localTimeParameter, newDistrictId);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Ethnicity_List")]
        public virtual IQueryable<Admin_Ethnicity_List_Result> Admin_Ethnicity_List(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Ethnicity_List_Result>("[PortalContext].[Admin_Ethnicity_List](@ClientID)", clientIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Grade_List")]
        public virtual IQueryable<Admin_Grade_List_Result> Admin_Grade_List(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Grade_List_Result>("[PortalContext].[Admin_Grade_List](@ClientID)", clientIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_HomeRoom_List")]
        public virtual IQueryable<Admin_HomeRoom_List_Result> Admin_HomeRoom_List(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_HomeRoom_List_Result>("[PortalContext].[Admin_HomeRoom_List](@ClientID)", clientIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Language_List")]
        public virtual IQueryable<Admin_Language_List_Result> Admin_Language_List(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Language_List_Result>("[PortalContext].[Admin_Language_List](@ClientID)", clientIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Menu_List")]
        public virtual IQueryable<Admin_Menu_List_Result> Admin_Menu_List(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Menu_List_Result>("[PortalContext].[Admin_Menu_List](@ClientID)", clientIDParameter);
        }
    
        public virtual int Admin_Payment_Save(Nullable<long> clientID, ObjectParameter cASHRESID, ObjectParameter oRDID, ObjectParameter oRDLOGID, Nullable<int> cASHIERID, Nullable<int> customerID, Nullable<double> alaCartePayment, Nullable<double> mealPlanPayment, Nullable<int> transType, Nullable<System.DateTime> localTime, ObjectParameter result, ObjectParameter errorMsg, ObjectParameter aBalance, ObjectParameter mBalance, ObjectParameter bonusBalance, Nullable<int> checkNum, Nullable<System.DateTime> oRDERDATE, Nullable<System.DateTime> oPENDATE, Nullable<System.DateTime> openDateLocal, Nullable<double> oPENAMOUNT, Nullable<System.DateTime> cLOSEDATE, Nullable<System.DateTime> closeDateLocal, Nullable<double> cLOSEAMOUNT, string paymentNote)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var cASHIERIDParameter = cASHIERID.HasValue ?
                new ObjectParameter("CASHIERID", cASHIERID) :
                new ObjectParameter("CASHIERID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var alaCartePaymentParameter = alaCartePayment.HasValue ?
                new ObjectParameter("AlaCartePayment", alaCartePayment) :
                new ObjectParameter("AlaCartePayment", typeof(double));
    
            var mealPlanPaymentParameter = mealPlanPayment.HasValue ?
                new ObjectParameter("MealPlanPayment", mealPlanPayment) :
                new ObjectParameter("MealPlanPayment", typeof(double));
    
            var transTypeParameter = transType.HasValue ?
                new ObjectParameter("TransType", transType) :
                new ObjectParameter("TransType", typeof(int));
    
            var localTimeParameter = localTime.HasValue ?
                new ObjectParameter("LocalTime", localTime) :
                new ObjectParameter("LocalTime", typeof(System.DateTime));
    
            var checkNumParameter = checkNum.HasValue ?
                new ObjectParameter("CheckNum", checkNum) :
                new ObjectParameter("CheckNum", typeof(int));
    
            var oRDERDATEParameter = oRDERDATE.HasValue ?
                new ObjectParameter("ORDERDATE", oRDERDATE) :
                new ObjectParameter("ORDERDATE", typeof(System.DateTime));
    
            var oPENDATEParameter = oPENDATE.HasValue ?
                new ObjectParameter("OPENDATE", oPENDATE) :
                new ObjectParameter("OPENDATE", typeof(System.DateTime));
    
            var openDateLocalParameter = openDateLocal.HasValue ?
                new ObjectParameter("OpenDateLocal", openDateLocal) :
                new ObjectParameter("OpenDateLocal", typeof(System.DateTime));
    
            var oPENAMOUNTParameter = oPENAMOUNT.HasValue ?
                new ObjectParameter("OPENAMOUNT", oPENAMOUNT) :
                new ObjectParameter("OPENAMOUNT", typeof(double));
    
            var cLOSEDATEParameter = cLOSEDATE.HasValue ?
                new ObjectParameter("CLOSEDATE", cLOSEDATE) :
                new ObjectParameter("CLOSEDATE", typeof(System.DateTime));
    
            var closeDateLocalParameter = closeDateLocal.HasValue ?
                new ObjectParameter("CloseDateLocal", closeDateLocal) :
                new ObjectParameter("CloseDateLocal", typeof(System.DateTime));
    
            var cLOSEAMOUNTParameter = cLOSEAMOUNT.HasValue ?
                new ObjectParameter("CLOSEAMOUNT", cLOSEAMOUNT) :
                new ObjectParameter("CLOSEAMOUNT", typeof(double));
    
            var paymentNoteParameter = paymentNote != null ?
                new ObjectParameter("PaymentNote", paymentNote) :
                new ObjectParameter("PaymentNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Payment_Save", clientIDParameter, cASHRESID, oRDID, oRDLOGID, cASHIERIDParameter, customerIDParameter, alaCartePaymentParameter, mealPlanPaymentParameter, transTypeParameter, localTimeParameter, result, errorMsg, aBalance, mBalance, bonusBalance, checkNumParameter, oRDERDATEParameter, oPENDATEParameter, openDateLocalParameter, oPENAMOUNTParameter, cLOSEDATEParameter, closeDateLocalParameter, cLOSEAMOUNTParameter, paymentNoteParameter);
        }
    
        public virtual ObjectResult<Admin_POS_Delete_Result> Admin_POS_Delete(Nullable<long> clientID, Nullable<int> pOSID, Nullable<bool> overrideOrders, Nullable<bool> overrideCashResults)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var pOSIDParameter = pOSID.HasValue ?
                new ObjectParameter("POSID", pOSID) :
                new ObjectParameter("POSID", typeof(int));
    
            var overrideOrdersParameter = overrideOrders.HasValue ?
                new ObjectParameter("OverrideOrders", overrideOrders) :
                new ObjectParameter("OverrideOrders", typeof(bool));
    
            var overrideCashResultsParameter = overrideCashResults.HasValue ?
                new ObjectParameter("OverrideCashResults", overrideCashResults) :
                new ObjectParameter("OverrideCashResults", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_POS_Delete_Result>("Admin_POS_Delete", clientIDParameter, pOSIDParameter, overrideOrdersParameter, overrideCashResultsParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_POS_List")]
        public virtual IQueryable<Admin_POS_List_Result> Admin_POS_List(Nullable<long> clientID, Nullable<long> schoolID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("SchoolID", schoolID) :
                new ObjectParameter("SchoolID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_POS_List_Result>("[PortalContext].[Admin_POS_List](@ClientID, @SchoolID)", clientIDParameter, schoolIDParameter);
        }
    
        public virtual ObjectResult<Admin_POS_Save_Result> Admin_POS_Save(Nullable<long> clientID, Nullable<int> pOSID, Nullable<int> school_Id, string pOS_Name, Nullable<bool> credit_Card_Enabled, string credit_Card_UserId, string credit_Card_Password)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var pOSIDParameter = pOSID.HasValue ?
                new ObjectParameter("POSID", pOSID) :
                new ObjectParameter("POSID", typeof(int));
    
            var school_IdParameter = school_Id.HasValue ?
                new ObjectParameter("School_Id", school_Id) :
                new ObjectParameter("School_Id", typeof(int));
    
            var pOS_NameParameter = pOS_Name != null ?
                new ObjectParameter("POS_Name", pOS_Name) :
                new ObjectParameter("POS_Name", typeof(string));
    
            var credit_Card_EnabledParameter = credit_Card_Enabled.HasValue ?
                new ObjectParameter("Credit_Card_Enabled", credit_Card_Enabled) :
                new ObjectParameter("Credit_Card_Enabled", typeof(bool));
    
            var credit_Card_UserIdParameter = credit_Card_UserId != null ?
                new ObjectParameter("Credit_Card_UserId", credit_Card_UserId) :
                new ObjectParameter("Credit_Card_UserId", typeof(string));
    
            var credit_Card_PasswordParameter = credit_Card_Password != null ?
                new ObjectParameter("Credit_Card_Password", credit_Card_Password) :
                new ObjectParameter("Credit_Card_Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_POS_Save_Result>("Admin_POS_Save", clientIDParameter, pOSIDParameter, school_IdParameter, pOS_NameParameter, credit_Card_EnabledParameter, credit_Card_UserIdParameter, credit_Card_PasswordParameter);
        }
    
        public virtual ObjectResult<Admin_School_Delete_Result> Admin_School_Delete(Nullable<long> clientID, Nullable<int> schoolID, Nullable<bool> overridePrimaryAssignment, Nullable<bool> overridePOSAssignment, Nullable<bool> overrideVendingMachineAssignment, Nullable<bool> overrideExpressGroupAssignment)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("SchoolID", schoolID) :
                new ObjectParameter("SchoolID", typeof(int));
    
            var overridePrimaryAssignmentParameter = overridePrimaryAssignment.HasValue ?
                new ObjectParameter("OverridePrimaryAssignment", overridePrimaryAssignment) :
                new ObjectParameter("OverridePrimaryAssignment", typeof(bool));
    
            var overridePOSAssignmentParameter = overridePOSAssignment.HasValue ?
                new ObjectParameter("OverridePOSAssignment", overridePOSAssignment) :
                new ObjectParameter("OverridePOSAssignment", typeof(bool));
    
            var overrideVendingMachineAssignmentParameter = overrideVendingMachineAssignment.HasValue ?
                new ObjectParameter("OverrideVendingMachineAssignment", overrideVendingMachineAssignment) :
                new ObjectParameter("OverrideVendingMachineAssignment", typeof(bool));
    
            var overrideExpressGroupAssignmentParameter = overrideExpressGroupAssignment.HasValue ?
                new ObjectParameter("OverrideExpressGroupAssignment", overrideExpressGroupAssignment) :
                new ObjectParameter("OverrideExpressGroupAssignment", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_School_Delete_Result>("Admin_School_Delete", clientIDParameter, schoolIDParameter, overridePrimaryAssignmentParameter, overridePOSAssignmentParameter, overrideVendingMachineAssignmentParameter, overrideExpressGroupAssignmentParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_School_List")]
        public virtual IQueryable<Admin_School_List_Result> Admin_School_List(Nullable<long> clientID, Nullable<long> district_Id, Nullable<bool> includeDeleted)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var district_IdParameter = district_Id.HasValue ?
                new ObjectParameter("District_Id", district_Id) :
                new ObjectParameter("District_Id", typeof(long));
    
            var includeDeletedParameter = includeDeleted.HasValue ?
                new ObjectParameter("IncludeDeleted", includeDeleted) :
                new ObjectParameter("IncludeDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_School_List_Result>("[PortalContext].[Admin_School_List](@ClientID, @District_Id, @IncludeDeleted)", clientIDParameter, district_IdParameter, includeDeletedParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_SchoolAssignment_List")]
        public virtual IQueryable<Admin_SchoolAssignment_List_Result> Admin_SchoolAssignment_List(Nullable<long> clientID, Nullable<int> customerID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_SchoolAssignment_List_Result>("[PortalContext].[Admin_SchoolAssignment_List](@ClientID, @CustomerID)", clientIDParameter, customerIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_SoldItems")]
        public virtual IQueryable<Admin_SoldItems_Result> Admin_SoldItems(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_SoldItems_Result>("[PortalContext].[Admin_SoldItems](@ClientID)", clientIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_UserRole_List")]
        public virtual IQueryable<Admin_UserRole_List_Result> Admin_UserRole_List(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_UserRole_List_Result>("[PortalContext].[Admin_UserRole_List](@ClientID)", clientIDParameter);
        }
    
        public virtual ObjectResult<Admin_UserRole_Save_Result> Admin_UserRole_Save(Nullable<long> clientID, Nullable<int> iD, string userRoleName, Nullable<int> adminHQSystem, string userRolePermissions_IDS)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var userRoleNameParameter = userRoleName != null ?
                new ObjectParameter("UserRoleName", userRoleName) :
                new ObjectParameter("UserRoleName", typeof(string));
    
            var adminHQSystemParameter = adminHQSystem.HasValue ?
                new ObjectParameter("AdminHQSystem", adminHQSystem) :
                new ObjectParameter("AdminHQSystem", typeof(int));
    
            var userRolePermissions_IDSParameter = userRolePermissions_IDS != null ?
                new ObjectParameter("UserRolePermissions_IDS", userRolePermissions_IDS) :
                new ObjectParameter("UserRolePermissions_IDS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_UserRole_Save_Result>("Admin_UserRole_Save", clientIDParameter, iDParameter, userRoleNameParameter, adminHQSystemParameter, userRolePermissions_IDSParameter);
        }
    
        public virtual int Admin_Users_Delete(Nullable<long> clientID, ObjectParameter employeeID, ObjectParameter resultCode, ObjectParameter errorMessage)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Users_Delete", clientIDParameter, employeeID, resultCode, errorMessage);
        }
    
        public virtual ObjectResult<Admin_Users_Detail_Result> Admin_Users_Detail(Nullable<long> clientID, Nullable<int> employeeID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Users_Detail_Result>("Admin_Users_Detail", clientIDParameter, employeeIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Users_List")]
        public virtual IQueryable<Admin_Users_List_Result> Admin_Users_List(Nullable<long> clientID, string searchString, Nullable<int> searchBy, string filterString, Nullable<int> filterBy)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(int));
    
            var filterStringParameter = filterString != null ?
                new ObjectParameter("FilterString", filterString) :
                new ObjectParameter("FilterString", typeof(string));
    
            var filterByParameter = filterBy.HasValue ?
                new ObjectParameter("FilterBy", filterBy) :
                new ObjectParameter("FilterBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Users_List_Result>("[PortalContext].[Admin_Users_List](@ClientID, @SearchString, @SearchBy, @FilterString, @FilterBy)", clientIDParameter, searchStringParameter, searchByParameter, filterStringParameter, filterByParameter);
        }
    
        public virtual int Admin_Users_Save(Nullable<long> clientID, ObjectParameter employeeID, string loginName, string password, Nullable<int> securityGroupID, Nullable<int> userRolesID, ObjectParameter resultCode, ObjectParameter errorMessage)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var securityGroupIDParameter = securityGroupID.HasValue ?
                new ObjectParameter("SecurityGroupID", securityGroupID) :
                new ObjectParameter("SecurityGroupID", typeof(int));
    
            var userRolesIDParameter = userRolesID.HasValue ?
                new ObjectParameter("UserRolesID", userRolesID) :
                new ObjectParameter("UserRolesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Users_Save", clientIDParameter, employeeID, loginNameParameter, passwordParameter, securityGroupIDParameter, userRolesIDParameter, resultCode, errorMessage);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_VoidGroup_Detail")]
        public virtual IQueryable<Admin_VoidGroup_Detail_Result> Admin_VoidGroup_Detail(Nullable<long> clientID, Nullable<int> groupID, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<int> searchBy)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_VoidGroup_Detail_Result>("[PortalContext].[Admin_VoidGroup_Detail](@ClientID, @GroupID, @DateStart, @DateEnd, @SearchBy)", clientIDParameter, groupIDParameter, dateStartParameter, dateEndParameter, searchByParameter);
        }
    
        public virtual ObjectResult<Main_Items_Void_Result> Main_Items_Void(Nullable<long> clientID, Nullable<long> iTEMID, Nullable<long> eMPLOYEEID, Nullable<int> oRDERTYPE, Nullable<long> oRDLOGID, string oRDLOGNOTE)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var iTEMIDParameter = iTEMID.HasValue ?
                new ObjectParameter("ITEMID", iTEMID) :
                new ObjectParameter("ITEMID", typeof(long));
    
            var eMPLOYEEIDParameter = eMPLOYEEID.HasValue ?
                new ObjectParameter("EMPLOYEEID", eMPLOYEEID) :
                new ObjectParameter("EMPLOYEEID", typeof(long));
    
            var oRDERTYPEParameter = oRDERTYPE.HasValue ?
                new ObjectParameter("ORDERTYPE", oRDERTYPE) :
                new ObjectParameter("ORDERTYPE", typeof(int));
    
            var oRDLOGIDParameter = oRDLOGID.HasValue ?
                new ObjectParameter("ORDLOGID", oRDLOGID) :
                new ObjectParameter("ORDLOGID", typeof(long));
    
            var oRDLOGNOTEParameter = oRDLOGNOTE != null ?
                new ObjectParameter("ORDLOGNOTE", oRDLOGNOTE) :
                new ObjectParameter("ORDLOGNOTE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_Items_Void_Result>("Main_Items_Void", clientIDParameter, iTEMIDParameter, eMPLOYEEIDParameter, oRDERTYPEParameter, oRDLOGIDParameter, oRDLOGNOTEParameter);
        }
    
        public virtual int Main_Order_Save(Nullable<long> clientID, ObjectParameter oRDID, Nullable<int> pOS_ID, Nullable<int> eMP_CASH_ID, Nullable<int> cUST_ID, Nullable<int> tRANSTYPE, Nullable<double> mDEBIT, Nullable<double> aDEBIT, Nullable<double> mCREDIT, Nullable<double> aCREDIT, Nullable<double> bCREDIT, Nullable<System.DateTime> localTime, ObjectParameter oRDLOG_ID, ObjectParameter aBalance, ObjectParameter mBalance, ObjectParameter bonusBalance, ObjectParameter result, ObjectParameter errorMsg, Nullable<int> mEALPLANID, Nullable<int> cASHRESID, Nullable<int> lUNCHTYPE, Nullable<int> sCHOOL_ID, Nullable<System.DateTime> oRDERDATE, Nullable<int> cREDITAUTH, Nullable<int> cHECKNUM, Nullable<bool> oVERRIDE, Nullable<bool> vOID, string oRDLOGNOTE)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var pOS_IDParameter = pOS_ID.HasValue ?
                new ObjectParameter("POS_ID", pOS_ID) :
                new ObjectParameter("POS_ID", typeof(int));
    
            var eMP_CASH_IDParameter = eMP_CASH_ID.HasValue ?
                new ObjectParameter("EMP_CASH_ID", eMP_CASH_ID) :
                new ObjectParameter("EMP_CASH_ID", typeof(int));
    
            var cUST_IDParameter = cUST_ID.HasValue ?
                new ObjectParameter("CUST_ID", cUST_ID) :
                new ObjectParameter("CUST_ID", typeof(int));
    
            var tRANSTYPEParameter = tRANSTYPE.HasValue ?
                new ObjectParameter("TRANSTYPE", tRANSTYPE) :
                new ObjectParameter("TRANSTYPE", typeof(int));
    
            var mDEBITParameter = mDEBIT.HasValue ?
                new ObjectParameter("MDEBIT", mDEBIT) :
                new ObjectParameter("MDEBIT", typeof(double));
    
            var aDEBITParameter = aDEBIT.HasValue ?
                new ObjectParameter("ADEBIT", aDEBIT) :
                new ObjectParameter("ADEBIT", typeof(double));
    
            var mCREDITParameter = mCREDIT.HasValue ?
                new ObjectParameter("MCREDIT", mCREDIT) :
                new ObjectParameter("MCREDIT", typeof(double));
    
            var aCREDITParameter = aCREDIT.HasValue ?
                new ObjectParameter("ACREDIT", aCREDIT) :
                new ObjectParameter("ACREDIT", typeof(double));
    
            var bCREDITParameter = bCREDIT.HasValue ?
                new ObjectParameter("BCREDIT", bCREDIT) :
                new ObjectParameter("BCREDIT", typeof(double));
    
            var localTimeParameter = localTime.HasValue ?
                new ObjectParameter("LocalTime", localTime) :
                new ObjectParameter("LocalTime", typeof(System.DateTime));
    
            var mEALPLANIDParameter = mEALPLANID.HasValue ?
                new ObjectParameter("MEALPLANID", mEALPLANID) :
                new ObjectParameter("MEALPLANID", typeof(int));
    
            var cASHRESIDParameter = cASHRESID.HasValue ?
                new ObjectParameter("CASHRESID", cASHRESID) :
                new ObjectParameter("CASHRESID", typeof(int));
    
            var lUNCHTYPEParameter = lUNCHTYPE.HasValue ?
                new ObjectParameter("LUNCHTYPE", lUNCHTYPE) :
                new ObjectParameter("LUNCHTYPE", typeof(int));
    
            var sCHOOL_IDParameter = sCHOOL_ID.HasValue ?
                new ObjectParameter("SCHOOL_ID", sCHOOL_ID) :
                new ObjectParameter("SCHOOL_ID", typeof(int));
    
            var oRDERDATEParameter = oRDERDATE.HasValue ?
                new ObjectParameter("ORDERDATE", oRDERDATE) :
                new ObjectParameter("ORDERDATE", typeof(System.DateTime));
    
            var cREDITAUTHParameter = cREDITAUTH.HasValue ?
                new ObjectParameter("CREDITAUTH", cREDITAUTH) :
                new ObjectParameter("CREDITAUTH", typeof(int));
    
            var cHECKNUMParameter = cHECKNUM.HasValue ?
                new ObjectParameter("CHECKNUM", cHECKNUM) :
                new ObjectParameter("CHECKNUM", typeof(int));
    
            var oVERRIDEParameter = oVERRIDE.HasValue ?
                new ObjectParameter("OVERRIDE", oVERRIDE) :
                new ObjectParameter("OVERRIDE", typeof(bool));
    
            var vOIDParameter = vOID.HasValue ?
                new ObjectParameter("VOID", vOID) :
                new ObjectParameter("VOID", typeof(bool));
    
            var oRDLOGNOTEParameter = oRDLOGNOTE != null ?
                new ObjectParameter("ORDLOGNOTE", oRDLOGNOTE) :
                new ObjectParameter("ORDLOGNOTE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Main_Order_Save", clientIDParameter, oRDID, pOS_IDParameter, eMP_CASH_IDParameter, cUST_IDParameter, tRANSTYPEParameter, mDEBITParameter, aDEBITParameter, mCREDITParameter, aCREDITParameter, bCREDITParameter, localTimeParameter, oRDLOG_ID, aBalance, mBalance, bonusBalance, result, errorMsg, mEALPLANIDParameter, cASHRESIDParameter, lUNCHTYPEParameter, sCHOOL_IDParameter, oRDERDATEParameter, cREDITAUTHParameter, cHECKNUMParameter, oVERRIDEParameter, vOIDParameter, oRDLOGNOTEParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Main_Order_View")]
        public virtual IQueryable<Main_Order_View_Result> Main_Order_View(Nullable<long> clientID, Nullable<int> orderID, Nullable<int> orderType)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var orderTypeParameter = orderType.HasValue ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Main_Order_View_Result>("[PortalContext].[Main_Order_View](@ClientID, @OrderID, @OrderType)", clientIDParameter, orderIDParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ItemCountOfCategoryType(Nullable<long> clientID, Nullable<long> categoryID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ItemCountOfCategoryType", clientIDParameter, categoryIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ItemCountOfCategory(Nullable<long> clientID, Nullable<long> categoryID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ItemCountOfCategory", clientIDParameter, categoryIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_VoidGroup_List")]
        public virtual IQueryable<Admin_VoidGroup_List_Result> Admin_VoidGroup_List(Nullable<long> clientID, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, string searchString, Nullable<int> searchBy)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_VoidGroup_List_Result>("[PortalContext].[Admin_VoidGroup_List](@ClientID, @DateStart, @DateEnd, @SearchString, @SearchBy)", clientIDParameter, dateStartParameter, dateEndParameter, searchStringParameter, searchByParameter);
        }
    
        public virtual ObjectResult<Admin_Customer_Detail_Result> Admin_Customer_Detail(Nullable<long> clientID, Nullable<long> customerID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Customer_Detail_Result>("Admin_Customer_Detail", clientIDParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<Admin_School_Save_Result> Admin_School_Save(Nullable<long> clientID, Nullable<long> schoolID, Nullable<long> district_ID, string school_Id_Num, string school_Name, Nullable<System.DateTime> localTime, Nullable<long> emp_Director_ID, Nullable<long> emp_Administrator_ID, string school_Addr1, string school_Addr2, string school_City, string school_State, string school_Zip, string school_Phone1, string school_Phone2, string school_Notes, Nullable<bool> severe_Need_School, Nullable<bool> deleted, Nullable<bool> useDistDirAdmin, Nullable<double> alaCarteLimit, Nullable<double> mealPlanLimit, Nullable<bool> usePinPrefix, string pinPrefix, Nullable<bool> usePhotos, Nullable<bool> useFingerIdent, Nullable<int> barCodePinLength, Nullable<System.DateTime> fiscalStart, Nullable<System.DateTime> fiscalEnd, Nullable<bool> stripZeros)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("SchoolID", schoolID) :
                new ObjectParameter("SchoolID", typeof(long));
    
            var district_IDParameter = district_ID.HasValue ?
                new ObjectParameter("District_ID", district_ID) :
                new ObjectParameter("District_ID", typeof(long));
    
            var school_Id_NumParameter = school_Id_Num != null ?
                new ObjectParameter("School_Id_Num", school_Id_Num) :
                new ObjectParameter("School_Id_Num", typeof(string));
    
            var school_NameParameter = school_Name != null ?
                new ObjectParameter("School_Name", school_Name) :
                new ObjectParameter("School_Name", typeof(string));
    
            var localTimeParameter = localTime.HasValue ?
                new ObjectParameter("LocalTime", localTime) :
                new ObjectParameter("LocalTime", typeof(System.DateTime));
    
            var emp_Director_IDParameter = emp_Director_ID.HasValue ?
                new ObjectParameter("Emp_Director_ID", emp_Director_ID) :
                new ObjectParameter("Emp_Director_ID", typeof(long));
    
            var emp_Administrator_IDParameter = emp_Administrator_ID.HasValue ?
                new ObjectParameter("Emp_Administrator_ID", emp_Administrator_ID) :
                new ObjectParameter("Emp_Administrator_ID", typeof(long));
    
            var school_Addr1Parameter = school_Addr1 != null ?
                new ObjectParameter("School_Addr1", school_Addr1) :
                new ObjectParameter("School_Addr1", typeof(string));
    
            var school_Addr2Parameter = school_Addr2 != null ?
                new ObjectParameter("School_Addr2", school_Addr2) :
                new ObjectParameter("School_Addr2", typeof(string));
    
            var school_CityParameter = school_City != null ?
                new ObjectParameter("School_City", school_City) :
                new ObjectParameter("School_City", typeof(string));
    
            var school_StateParameter = school_State != null ?
                new ObjectParameter("School_State", school_State) :
                new ObjectParameter("School_State", typeof(string));
    
            var school_ZipParameter = school_Zip != null ?
                new ObjectParameter("School_Zip", school_Zip) :
                new ObjectParameter("School_Zip", typeof(string));
    
            var school_Phone1Parameter = school_Phone1 != null ?
                new ObjectParameter("School_Phone1", school_Phone1) :
                new ObjectParameter("School_Phone1", typeof(string));
    
            var school_Phone2Parameter = school_Phone2 != null ?
                new ObjectParameter("School_Phone2", school_Phone2) :
                new ObjectParameter("School_Phone2", typeof(string));
    
            var school_NotesParameter = school_Notes != null ?
                new ObjectParameter("School_Notes", school_Notes) :
                new ObjectParameter("School_Notes", typeof(string));
    
            var severe_Need_SchoolParameter = severe_Need_School.HasValue ?
                new ObjectParameter("Severe_Need_School", severe_Need_School) :
                new ObjectParameter("Severe_Need_School", typeof(bool));
    
            var deletedParameter = deleted.HasValue ?
                new ObjectParameter("Deleted", deleted) :
                new ObjectParameter("Deleted", typeof(bool));
    
            var useDistDirAdminParameter = useDistDirAdmin.HasValue ?
                new ObjectParameter("UseDistDirAdmin", useDistDirAdmin) :
                new ObjectParameter("UseDistDirAdmin", typeof(bool));
    
            var alaCarteLimitParameter = alaCarteLimit.HasValue ?
                new ObjectParameter("AlaCarteLimit", alaCarteLimit) :
                new ObjectParameter("AlaCarteLimit", typeof(double));
    
            var mealPlanLimitParameter = mealPlanLimit.HasValue ?
                new ObjectParameter("MealPlanLimit", mealPlanLimit) :
                new ObjectParameter("MealPlanLimit", typeof(double));
    
            var usePinPrefixParameter = usePinPrefix.HasValue ?
                new ObjectParameter("UsePinPrefix", usePinPrefix) :
                new ObjectParameter("UsePinPrefix", typeof(bool));
    
            var pinPrefixParameter = pinPrefix != null ?
                new ObjectParameter("PinPrefix", pinPrefix) :
                new ObjectParameter("PinPrefix", typeof(string));
    
            var usePhotosParameter = usePhotos.HasValue ?
                new ObjectParameter("UsePhotos", usePhotos) :
                new ObjectParameter("UsePhotos", typeof(bool));
    
            var useFingerIdentParameter = useFingerIdent.HasValue ?
                new ObjectParameter("UseFingerIdent", useFingerIdent) :
                new ObjectParameter("UseFingerIdent", typeof(bool));
    
            var barCodePinLengthParameter = barCodePinLength.HasValue ?
                new ObjectParameter("BarCodePinLength", barCodePinLength) :
                new ObjectParameter("BarCodePinLength", typeof(int));
    
            var fiscalStartParameter = fiscalStart.HasValue ?
                new ObjectParameter("FiscalStart", fiscalStart) :
                new ObjectParameter("FiscalStart", typeof(System.DateTime));
    
            var fiscalEndParameter = fiscalEnd.HasValue ?
                new ObjectParameter("FiscalEnd", fiscalEnd) :
                new ObjectParameter("FiscalEnd", typeof(System.DateTime));
    
            var stripZerosParameter = stripZeros.HasValue ?
                new ObjectParameter("StripZeros", stripZeros) :
                new ObjectParameter("StripZeros", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_School_Save_Result>("Admin_School_Save", clientIDParameter, schoolIDParameter, district_IDParameter, school_Id_NumParameter, school_NameParameter, localTimeParameter, emp_Director_IDParameter, emp_Administrator_IDParameter, school_Addr1Parameter, school_Addr2Parameter, school_CityParameter, school_StateParameter, school_ZipParameter, school_Phone1Parameter, school_Phone2Parameter, school_NotesParameter, severe_Need_SchoolParameter, deletedParameter, useDistDirAdminParameter, alaCarteLimitParameter, mealPlanLimitParameter, usePinPrefixParameter, pinPrefixParameter, usePhotosParameter, useFingerIdentParameter, barCodePinLengthParameter, fiscalStartParameter, fiscalEndParameter, stripZerosParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Reporting_StatementDetailedItems")]
        public virtual IQueryable<Reporting_StatementDetailedItems_Result> Reporting_StatementDetailedItems(Nullable<long> clientID, string cUSTLIST, string sCHLIST, string gRLIST, string hRLIST, Nullable<int> aCTIVETYPE, Nullable<int> dELETEDTYPE, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var cUSTLISTParameter = cUSTLIST != null ?
                new ObjectParameter("CUSTLIST", cUSTLIST) :
                new ObjectParameter("CUSTLIST", typeof(string));
    
            var sCHLISTParameter = sCHLIST != null ?
                new ObjectParameter("SCHLIST", sCHLIST) :
                new ObjectParameter("SCHLIST", typeof(string));
    
            var gRLISTParameter = gRLIST != null ?
                new ObjectParameter("GRLIST", gRLIST) :
                new ObjectParameter("GRLIST", typeof(string));
    
            var hRLISTParameter = hRLIST != null ?
                new ObjectParameter("HRLIST", hRLIST) :
                new ObjectParameter("HRLIST", typeof(string));
    
            var aCTIVETYPEParameter = aCTIVETYPE.HasValue ?
                new ObjectParameter("ACTIVETYPE", aCTIVETYPE) :
                new ObjectParameter("ACTIVETYPE", typeof(int));
    
            var dELETEDTYPEParameter = dELETEDTYPE.HasValue ?
                new ObjectParameter("DELETEDTYPE", dELETEDTYPE) :
                new ObjectParameter("DELETEDTYPE", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Reporting_StatementDetailedItems_Result>("[PortalContext].[Reporting_StatementDetailedItems](@ClientID, @CUSTLIST, @SCHLIST, @GRLIST, @HRLIST, @ACTIVETYPE, @DELETEDTYPE, @StartDate, @EndDate)", clientIDParameter, cUSTLISTParameter, sCHLISTParameter, gRLISTParameter, hRLISTParameter, aCTIVETYPEParameter, dELETEDTYPEParameter, startDateParameter, endDateParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Reporting_StatementDetailedOrders")]
        public virtual IQueryable<Reporting_StatementDetailedOrders_Result> Reporting_StatementDetailedOrders(Nullable<long> clientID, string cUSTLIST, string sCHLIST, string gRLIST, string hRLIST, Nullable<int> aCTIVETYPE, Nullable<int> dELETEDTYPE, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var cUSTLISTParameter = cUSTLIST != null ?
                new ObjectParameter("CUSTLIST", cUSTLIST) :
                new ObjectParameter("CUSTLIST", typeof(string));
    
            var sCHLISTParameter = sCHLIST != null ?
                new ObjectParameter("SCHLIST", sCHLIST) :
                new ObjectParameter("SCHLIST", typeof(string));
    
            var gRLISTParameter = gRLIST != null ?
                new ObjectParameter("GRLIST", gRLIST) :
                new ObjectParameter("GRLIST", typeof(string));
    
            var hRLISTParameter = hRLIST != null ?
                new ObjectParameter("HRLIST", hRLIST) :
                new ObjectParameter("HRLIST", typeof(string));
    
            var aCTIVETYPEParameter = aCTIVETYPE.HasValue ?
                new ObjectParameter("ACTIVETYPE", aCTIVETYPE) :
                new ObjectParameter("ACTIVETYPE", typeof(int));
    
            var dELETEDTYPEParameter = dELETEDTYPE.HasValue ?
                new ObjectParameter("DELETEDTYPE", dELETEDTYPE) :
                new ObjectParameter("DELETEDTYPE", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Reporting_StatementDetailedOrders_Result>("[PortalContext].[Reporting_StatementDetailedOrders](@ClientID, @CUSTLIST, @SCHLIST, @GRLIST, @HRLIST, @ACTIVETYPE, @DELETEDTYPE, @StartDate, @EndDate)", clientIDParameter, cUSTLISTParameter, sCHLISTParameter, gRLISTParameter, hRLISTParameter, aCTIVETYPEParameter, dELETEDTYPEParameter, startDateParameter, endDateParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Reporting_StatementOrdersSummary")]
        public virtual IQueryable<Reporting_StatementOrdersSummary_Result> Reporting_StatementOrdersSummary(Nullable<long> clientID, string cUSTLIST, string sCHLIST, string gRLIST, string hRLIST, Nullable<int> aCTIVETYPE, Nullable<int> dELETEDTYPE, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var cUSTLISTParameter = cUSTLIST != null ?
                new ObjectParameter("CUSTLIST", cUSTLIST) :
                new ObjectParameter("CUSTLIST", typeof(string));
    
            var sCHLISTParameter = sCHLIST != null ?
                new ObjectParameter("SCHLIST", sCHLIST) :
                new ObjectParameter("SCHLIST", typeof(string));
    
            var gRLISTParameter = gRLIST != null ?
                new ObjectParameter("GRLIST", gRLIST) :
                new ObjectParameter("GRLIST", typeof(string));
    
            var hRLISTParameter = hRLIST != null ?
                new ObjectParameter("HRLIST", hRLIST) :
                new ObjectParameter("HRLIST", typeof(string));
    
            var aCTIVETYPEParameter = aCTIVETYPE.HasValue ?
                new ObjectParameter("ACTIVETYPE", aCTIVETYPE) :
                new ObjectParameter("ACTIVETYPE", typeof(int));
    
            var dELETEDTYPEParameter = dELETEDTYPE.HasValue ?
                new ObjectParameter("DELETEDTYPE", dELETEDTYPE) :
                new ObjectParameter("DELETEDTYPE", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Reporting_StatementOrdersSummary_Result>("[PortalContext].[Reporting_StatementOrdersSummary](@ClientID, @CUSTLIST, @SCHLIST, @GRLIST, @HRLIST, @ACTIVETYPE, @DELETEDTYPE, @StartDate, @EndDate)", clientIDParameter, cUSTLISTParameter, sCHLISTParameter, gRLISTParameter, hRLISTParameter, aCTIVETYPEParameter, dELETEDTYPEParameter, startDateParameter, endDateParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Dashboard_AccountInformation")]
        public virtual IQueryable<Admin_Dashboard_AccountInformation_Result> Admin_Dashboard_AccountInformation(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Dashboard_AccountInformation_Result>("[PortalContext].[Admin_Dashboard_AccountInformation](@ClientID)", clientIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Dashboard_Participation_Percentage")]
        public virtual IQueryable<Admin_Dashboard_Participation_Percentage_Result> Admin_Dashboard_Participation_Percentage(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Dashboard_Participation_Percentage_Result>("[PortalContext].[Admin_Dashboard_Participation_Percentage](@ClientID)", clientIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Dashboard_Payments")]
        public virtual IQueryable<Admin_Dashboard_Payments_Result> Admin_Dashboard_Payments(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<long> clientID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Dashboard_Payments_Result>("[PortalContext].[Admin_Dashboard_Payments](@FromDate, @ToDate, @ClientID)", fromDateParameter, toDateParameter, clientIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Dashboard_Sales")]
        public virtual IQueryable<Admin_Dashboard_Sales_Result> Admin_Dashboard_Sales(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<long> clientID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Dashboard_Sales_Result>("[PortalContext].[Admin_Dashboard_Sales](@FromDate, @ToDate, @ClientID)", fromDateParameter, toDateParameter, clientIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Dashboard_TotalSales")]
        public virtual IQueryable<Admin_Dashboard_TotalSales_Result> Admin_Dashboard_TotalSales(Nullable<long> clientID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Dashboard_TotalSales_Result>("[PortalContext].[Admin_Dashboard_TotalSales](@ClientID)", clientIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Reporting_CustomerRosterSummary")]
        public virtual IQueryable<Reporting_CustomerRosterSummary_Result> Reporting_CustomerRosterSummary(Nullable<long> clientID, string cUSTLIST, string sCHLIST, string gRLIST, string hRLIST, string lTLIST, Nullable<int> aCTIVETYPE, Nullable<int> dELETEDTYPE, string zEROBALANCES, string aCCOUNTTYPE, Nullable<double> rangeStart, Nullable<double> rangeEnd, Nullable<double> greaterThan, Nullable<double> lessThan, Nullable<bool> dOCREATEDATE, Nullable<System.DateTime> cREATEDATEBEGIN, Nullable<System.DateTime> cREATEDATEEND, Nullable<int> cREATETYPE, Nullable<System.DateTime> bALCALCENDDATE, Nullable<bool> iNCLUDEBALS, Nullable<System.DateTime> startDate)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var cUSTLISTParameter = cUSTLIST != null ?
                new ObjectParameter("CUSTLIST", cUSTLIST) :
                new ObjectParameter("CUSTLIST", typeof(string));
    
            var sCHLISTParameter = sCHLIST != null ?
                new ObjectParameter("SCHLIST", sCHLIST) :
                new ObjectParameter("SCHLIST", typeof(string));
    
            var gRLISTParameter = gRLIST != null ?
                new ObjectParameter("GRLIST", gRLIST) :
                new ObjectParameter("GRLIST", typeof(string));
    
            var hRLISTParameter = hRLIST != null ?
                new ObjectParameter("HRLIST", hRLIST) :
                new ObjectParameter("HRLIST", typeof(string));
    
            var lTLISTParameter = lTLIST != null ?
                new ObjectParameter("LTLIST", lTLIST) :
                new ObjectParameter("LTLIST", typeof(string));
    
            var aCTIVETYPEParameter = aCTIVETYPE.HasValue ?
                new ObjectParameter("ACTIVETYPE", aCTIVETYPE) :
                new ObjectParameter("ACTIVETYPE", typeof(int));
    
            var dELETEDTYPEParameter = dELETEDTYPE.HasValue ?
                new ObjectParameter("DELETEDTYPE", dELETEDTYPE) :
                new ObjectParameter("DELETEDTYPE", typeof(int));
    
            var zEROBALANCESParameter = zEROBALANCES != null ?
                new ObjectParameter("ZEROBALANCES", zEROBALANCES) :
                new ObjectParameter("ZEROBALANCES", typeof(string));
    
            var aCCOUNTTYPEParameter = aCCOUNTTYPE != null ?
                new ObjectParameter("ACCOUNTTYPE", aCCOUNTTYPE) :
                new ObjectParameter("ACCOUNTTYPE", typeof(string));
    
            var rangeStartParameter = rangeStart.HasValue ?
                new ObjectParameter("RangeStart", rangeStart) :
                new ObjectParameter("RangeStart", typeof(double));
    
            var rangeEndParameter = rangeEnd.HasValue ?
                new ObjectParameter("RangeEnd", rangeEnd) :
                new ObjectParameter("RangeEnd", typeof(double));
    
            var greaterThanParameter = greaterThan.HasValue ?
                new ObjectParameter("GreaterThan", greaterThan) :
                new ObjectParameter("GreaterThan", typeof(double));
    
            var lessThanParameter = lessThan.HasValue ?
                new ObjectParameter("LessThan", lessThan) :
                new ObjectParameter("LessThan", typeof(double));
    
            var dOCREATEDATEParameter = dOCREATEDATE.HasValue ?
                new ObjectParameter("DOCREATEDATE", dOCREATEDATE) :
                new ObjectParameter("DOCREATEDATE", typeof(bool));
    
            var cREATEDATEBEGINParameter = cREATEDATEBEGIN.HasValue ?
                new ObjectParameter("CREATEDATEBEGIN", cREATEDATEBEGIN) :
                new ObjectParameter("CREATEDATEBEGIN", typeof(System.DateTime));
    
            var cREATEDATEENDParameter = cREATEDATEEND.HasValue ?
                new ObjectParameter("CREATEDATEEND", cREATEDATEEND) :
                new ObjectParameter("CREATEDATEEND", typeof(System.DateTime));
    
            var cREATETYPEParameter = cREATETYPE.HasValue ?
                new ObjectParameter("CREATETYPE", cREATETYPE) :
                new ObjectParameter("CREATETYPE", typeof(int));
    
            var bALCALCENDDATEParameter = bALCALCENDDATE.HasValue ?
                new ObjectParameter("BALCALCENDDATE", bALCALCENDDATE) :
                new ObjectParameter("BALCALCENDDATE", typeof(System.DateTime));
    
            var iNCLUDEBALSParameter = iNCLUDEBALS.HasValue ?
                new ObjectParameter("INCLUDEBALS", iNCLUDEBALS) :
                new ObjectParameter("INCLUDEBALS", typeof(bool));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Reporting_CustomerRosterSummary_Result>("[PortalContext].[Reporting_CustomerRosterSummary](@ClientID, @CUSTLIST, @SCHLIST, @GRLIST, @HRLIST, @LTLIST, @ACTIVETYPE, @DELETEDTYPE, @ZEROBALANCES, @ACCOUNTTYPE, @RangeStart, @RangeEnd, @GreaterThan, @LessThan, @DOCREATEDATE, @CREATEDATEBEGIN, @CREATEDATEEND, @CREATETYPE, @BALCALCENDDATE, @INCLUDEBALS, @StartDate)", clientIDParameter, cUSTLISTParameter, sCHLISTParameter, gRLISTParameter, hRLISTParameter, lTLISTParameter, aCTIVETYPEParameter, dELETEDTYPEParameter, zEROBALANCESParameter, aCCOUNTTYPEParameter, rangeStartParameter, rangeEndParameter, greaterThanParameter, lessThanParameter, dOCREATEDATEParameter, cREATEDATEBEGINParameter, cREATEDATEENDParameter, cREATETYPEParameter, bALCALCENDDATEParameter, iNCLUDEBALSParameter, startDateParameter);
        }
    
        public virtual ObjectResult<Main_Order_Void_Result> Main_Order_Void(Nullable<long> clientID, Nullable<long> eMPLOYEEID, Nullable<long> oRDERID, Nullable<int> oRDERTYPE, Nullable<bool> vOIDPAYMENT, Nullable<long> oRDLOGID, string oRDLOGNOTE, ObjectParameter errorMessage)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var eMPLOYEEIDParameter = eMPLOYEEID.HasValue ?
                new ObjectParameter("EMPLOYEEID", eMPLOYEEID) :
                new ObjectParameter("EMPLOYEEID", typeof(long));
    
            var oRDERIDParameter = oRDERID.HasValue ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(long));
    
            var oRDERTYPEParameter = oRDERTYPE.HasValue ?
                new ObjectParameter("ORDERTYPE", oRDERTYPE) :
                new ObjectParameter("ORDERTYPE", typeof(int));
    
            var vOIDPAYMENTParameter = vOIDPAYMENT.HasValue ?
                new ObjectParameter("VOIDPAYMENT", vOIDPAYMENT) :
                new ObjectParameter("VOIDPAYMENT", typeof(bool));
    
            var oRDLOGIDParameter = oRDLOGID.HasValue ?
                new ObjectParameter("ORDLOGID", oRDLOGID) :
                new ObjectParameter("ORDLOGID", typeof(long));
    
            var oRDLOGNOTEParameter = oRDLOGNOTE != null ?
                new ObjectParameter("ORDLOGNOTE", oRDLOGNOTE) :
                new ObjectParameter("ORDLOGNOTE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_Order_Void_Result>("Main_Order_Void", clientIDParameter, eMPLOYEEIDParameter, oRDERIDParameter, oRDERTYPEParameter, vOIDPAYMENTParameter, oRDLOGIDParameter, oRDLOGNOTEParameter, errorMessage);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "AccountBalanceInfo")]
        public virtual IQueryable<AccountBalanceInfo_Result> AccountBalanceInfo(Nullable<long> clientID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> orderDate, string sCHLIST)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var sCHLISTParameter = sCHLIST != null ?
                new ObjectParameter("SCHLIST", sCHLIST) :
                new ObjectParameter("SCHLIST", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AccountBalanceInfo_Result>("[PortalContext].[AccountBalanceInfo](@ClientID, @StartDate, @EndDate, @OrderDate, @SCHLIST)", clientIDParameter, startDateParameter, endDateParameter, orderDateParameter, sCHLISTParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "CustomerBalanceData")]
        public virtual IQueryable<CustomerBalanceData_Result> CustomerBalanceData(Nullable<long> clientID, string custList, string schList, string gRList, string hRList, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var custListParameter = custList != null ?
                new ObjectParameter("CustList", custList) :
                new ObjectParameter("CustList", typeof(string));
    
            var schListParameter = schList != null ?
                new ObjectParameter("SchList", schList) :
                new ObjectParameter("SchList", typeof(string));
    
            var gRListParameter = gRList != null ?
                new ObjectParameter("GRList", gRList) :
                new ObjectParameter("GRList", typeof(string));
    
            var hRListParameter = hRList != null ?
                new ObjectParameter("HRList", hRList) :
                new ObjectParameter("HRList", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerBalanceData_Result>("[PortalContext].[CustomerBalanceData](@ClientID, @CustList, @SchList, @GRList, @HRList, @StartDate, @EndDate)", clientIDParameter, custListParameter, schListParameter, gRListParameter, hRListParameter, startDateParameter, endDateParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_AccessRights_List")]
        public virtual IQueryable<Admin_AccessRights_List_Result> Admin_AccessRights_List(Nullable<long> clientID, string securityGroup)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var securityGroupParameter = securityGroup != null ?
                new ObjectParameter("SecurityGroup", securityGroup) :
                new ObjectParameter("SecurityGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_AccessRights_List_Result>("[PortalContext].[Admin_AccessRights_List](@ClientID, @SecurityGroup)", clientIDParameter, securityGroupParameter);
        }
    
        public virtual int Admin_UserRole_Delete(Nullable<long> clientID, string securityGroupName, ObjectParameter resultCode, ObjectParameter errorMessage)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var securityGroupNameParameter = securityGroupName != null ?
                new ObjectParameter("SecurityGroupName", securityGroupName) :
                new ObjectParameter("SecurityGroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_UserRole_Delete", clientIDParameter, securityGroupNameParameter, resultCode, errorMessage);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Reporting_DetailedTransactions")]
        public virtual IQueryable<Reporting_DetailedTransactions_Result> Reporting_DetailedTransactions(Nullable<long> clientID, string sCHLIST, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var sCHLISTParameter = sCHLIST != null ?
                new ObjectParameter("SCHLIST", sCHLIST) :
                new ObjectParameter("SCHLIST", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Reporting_DetailedTransactions_Result>("[PortalContext].[Reporting_DetailedTransactions](@ClientID, @SCHLIST, @StartDate, @EndDate)", clientIDParameter, sCHLISTParameter, startDateParameter, endDateParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Reporting_SoldItemsByCategory")]
        public virtual IQueryable<Reporting_SoldItemsByCategory_Result> Reporting_SoldItemsByCategory(Nullable<long> clientID, string sCHLIST, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var sCHLISTParameter = sCHLIST != null ?
                new ObjectParameter("SCHLIST", sCHLIST) :
                new ObjectParameter("SCHLIST", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Reporting_SoldItemsByCategory_Result>("[PortalContext].[Reporting_SoldItemsByCategory](@ClientID, @SCHLIST, @StartDate, @EndDate)", clientIDParameter, sCHLISTParameter, startDateParameter, endDateParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Categories_List")]
        public virtual IQueryable<Admin_Categories_List_Result> Admin_Categories_List(Nullable<long> clientID, Nullable<long> categoryID, Nullable<long> categoryTypeID, Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            var categoryTypeIDParameter = categoryTypeID.HasValue ?
                new ObjectParameter("categoryTypeID", categoryTypeID) :
                new ObjectParameter("categoryTypeID", typeof(long));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Categories_List_Result>("[PortalContext].[Admin_Categories_List](@ClientID, @CategoryID, @categoryTypeID, @PageNo, @PageSize, @SortColumn, @SortOrder)", clientIDParameter, categoryIDParameter, categoryTypeIDParameter, pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<Admin_Connected_Customers_Result> Admin_Connected_Customers(Nullable<long> clientID, string listClientCustids, string listDistCustids)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var listClientCustidsParameter = listClientCustids != null ?
                new ObjectParameter("ListClientCustids", listClientCustids) :
                new ObjectParameter("ListClientCustids", typeof(string));
    
            var listDistCustidsParameter = listDistCustids != null ?
                new ObjectParameter("ListDistCustids", listDistCustids) :
                new ObjectParameter("ListDistCustids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Connected_Customers_Result>("Admin_Connected_Customers", clientIDParameter, listClientCustidsParameter, listDistCustidsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Admin_Customer_IsFreeReducedApplied(Nullable<long> clientID, Nullable<long> customerID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Admin_Customer_IsFreeReducedApplied", clientIDParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<Admin_Connected_Customers_MSA_Result> Admin_Connected_Customers_MSA(Nullable<long> clientID, string listClientCustids, string listDistCustids)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var listClientCustidsParameter = listClientCustids != null ?
                new ObjectParameter("ListClientCustids", listClientCustids) :
                new ObjectParameter("ListClientCustids", typeof(string));
    
            var listDistCustidsParameter = listDistCustids != null ?
                new ObjectParameter("ListDistCustids", listDistCustids) :
                new ObjectParameter("ListDistCustids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Connected_Customers_MSA_Result>("Admin_Connected_Customers_MSA", clientIDParameter, listClientCustidsParameter, listDistCustidsParameter);
        }
    
        public virtual ObjectResult<Admin_Customer_Detail_ForPayment_Result> Admin_Customer_Detail_ForPayment(Nullable<long> clientID, Nullable<long> customerID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Customer_Detail_ForPayment_Result>("Admin_Customer_Detail_ForPayment", clientIDParameter, customerIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Reporting_CustomerBySoldItems")]
        public virtual IQueryable<Reporting_CustomerBySoldItems_Result> Reporting_CustomerBySoldItems(Nullable<long> clientID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sCHLIST, string gRLIST, string hRLIST, string qualificationTypes, Nullable<int> itemSelectionType, string selectedTypeList, string selectedQtyType, Nullable<int> minQty, Nullable<int> maxQty)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sCHLISTParameter = sCHLIST != null ?
                new ObjectParameter("SCHLIST", sCHLIST) :
                new ObjectParameter("SCHLIST", typeof(string));
    
            var gRLISTParameter = gRLIST != null ?
                new ObjectParameter("GRLIST", gRLIST) :
                new ObjectParameter("GRLIST", typeof(string));
    
            var hRLISTParameter = hRLIST != null ?
                new ObjectParameter("HRLIST", hRLIST) :
                new ObjectParameter("HRLIST", typeof(string));
    
            var qualificationTypesParameter = qualificationTypes != null ?
                new ObjectParameter("QualificationTypes", qualificationTypes) :
                new ObjectParameter("QualificationTypes", typeof(string));
    
            var itemSelectionTypeParameter = itemSelectionType.HasValue ?
                new ObjectParameter("ItemSelectionType", itemSelectionType) :
                new ObjectParameter("ItemSelectionType", typeof(int));
    
            var selectedTypeListParameter = selectedTypeList != null ?
                new ObjectParameter("SelectedTypeList", selectedTypeList) :
                new ObjectParameter("SelectedTypeList", typeof(string));
    
            var selectedQtyTypeParameter = selectedQtyType != null ?
                new ObjectParameter("SelectedQtyType", selectedQtyType) :
                new ObjectParameter("SelectedQtyType", typeof(string));
    
            var minQtyParameter = minQty.HasValue ?
                new ObjectParameter("minQty", minQty) :
                new ObjectParameter("minQty", typeof(int));
    
            var maxQtyParameter = maxQty.HasValue ?
                new ObjectParameter("maxQty", maxQty) :
                new ObjectParameter("maxQty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Reporting_CustomerBySoldItems_Result>("[PortalContext].[Reporting_CustomerBySoldItems](@ClientID, @StartDate, @EndDate, @SCHLIST, @GRLIST, @HRLIST, @QualificationTypes, @ItemSelectionType, @SelectedTypeList, @SelectedQtyType, @minQty, @maxQty)", clientIDParameter, startDateParameter, endDateParameter, sCHLISTParameter, gRLISTParameter, hRLISTParameter, qualificationTypesParameter, itemSelectionTypeParameter, selectedTypeListParameter, selectedQtyTypeParameter, minQtyParameter, maxQtyParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_PreorderItems_List")]
        public virtual IQueryable<Admin_PreorderItems_List_Result> Admin_PreorderItems_List(Nullable<long> clientID, string preorderItemsIds, Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var preorderItemsIdsParameter = preorderItemsIds != null ?
                new ObjectParameter("PreorderItemsIds", preorderItemsIds) :
                new ObjectParameter("PreorderItemsIds", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_PreorderItems_List_Result>("[PortalContext].[Admin_PreorderItems_List](@ClientID, @PreorderItemsIds, @PageNo, @PageSize, @SortColumn, @SortOrder)", clientIDParameter, preorderItemsIdsParameter, pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<Main_LoadItem_Void_List_Result> Main_LoadItem_Void_List(string preorder)
        {
            var preorderParameter = preorder != null ?
                new ObjectParameter("Preorder", preorder) :
                new ObjectParameter("Preorder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_LoadItem_Void_List_Result>("Main_LoadItem_Void_List", preorderParameter);
        }
    
        public virtual ObjectResult<Main_LoadOrder_Void_List_Result> Main_LoadOrder_Void_List(string preorder)
        {
            var preorderParameter = preorder != null ?
                new ObjectParameter("Preorder", preorder) :
                new ObjectParameter("Preorder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_LoadOrder_Void_List_Result>("Main_LoadOrder_Void_List", preorderParameter);
        }
    
        public virtual ObjectResult<Main_PreOrder_AvgInPreorderOverview_Result> Main_PreOrder_AvgInPreorderOverview()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_PreOrder_AvgInPreorderOverview_Result>("Main_PreOrder_AvgInPreorderOverview");
        }
    
        public virtual ObjectResult<Main_PreOrder_Count_Result> Main_PreOrder_Count(string location, string dateRangeTypes, string fromDate, string toDate, string homeRoom, string customersSelectionType, string customersList, string grade, string itemSelectionType, string itemStatus, string selectedTypeList)
        {
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var dateRangeTypesParameter = dateRangeTypes != null ?
                new ObjectParameter("DateRangeTypes", dateRangeTypes) :
                new ObjectParameter("DateRangeTypes", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var homeRoomParameter = homeRoom != null ?
                new ObjectParameter("homeRoom", homeRoom) :
                new ObjectParameter("homeRoom", typeof(string));
    
            var customersSelectionTypeParameter = customersSelectionType != null ?
                new ObjectParameter("CustomersSelectionType", customersSelectionType) :
                new ObjectParameter("CustomersSelectionType", typeof(string));
    
            var customersListParameter = customersList != null ?
                new ObjectParameter("CustomersList", customersList) :
                new ObjectParameter("CustomersList", typeof(string));
    
            var gradeParameter = grade != null ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(string));
    
            var itemSelectionTypeParameter = itemSelectionType != null ?
                new ObjectParameter("ItemSelectionType", itemSelectionType) :
                new ObjectParameter("ItemSelectionType", typeof(string));
    
            var itemStatusParameter = itemStatus != null ?
                new ObjectParameter("ItemStatus", itemStatus) :
                new ObjectParameter("ItemStatus", typeof(string));
    
            var selectedTypeListParameter = selectedTypeList != null ?
                new ObjectParameter("SelectedTypeList", selectedTypeList) :
                new ObjectParameter("SelectedTypeList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_PreOrder_Count_Result>("Main_PreOrder_Count", locationParameter, dateRangeTypesParameter, fromDateParameter, toDateParameter, homeRoomParameter, customersSelectionTypeParameter, customersListParameter, gradeParameter, itemSelectionTypeParameter, itemStatusParameter, selectedTypeListParameter);
        }
    
        public virtual ObjectResult<Main_PreOrder_CurrentPreorderOverview_Result> Main_PreOrder_CurrentPreorderOverview()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_PreOrder_CurrentPreorderOverview_Result>("Main_PreOrder_CurrentPreorderOverview");
        }
    
        public virtual ObjectResult<Main_PreOrder_List_Result> Main_PreOrder_List(string location, string dateRangeTypes, string fromDate, string toDate, string homeRoom, string customersSelectionType, string customersList, string grade, string itemSelectionType, string itemStatus, string selectedTypeList, Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var dateRangeTypesParameter = dateRangeTypes != null ?
                new ObjectParameter("DateRangeTypes", dateRangeTypes) :
                new ObjectParameter("DateRangeTypes", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var homeRoomParameter = homeRoom != null ?
                new ObjectParameter("homeRoom", homeRoom) :
                new ObjectParameter("homeRoom", typeof(string));
    
            var customersSelectionTypeParameter = customersSelectionType != null ?
                new ObjectParameter("CustomersSelectionType", customersSelectionType) :
                new ObjectParameter("CustomersSelectionType", typeof(string));
    
            var customersListParameter = customersList != null ?
                new ObjectParameter("CustomersList", customersList) :
                new ObjectParameter("CustomersList", typeof(string));
    
            var gradeParameter = grade != null ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(string));
    
            var itemSelectionTypeParameter = itemSelectionType != null ?
                new ObjectParameter("ItemSelectionType", itemSelectionType) :
                new ObjectParameter("ItemSelectionType", typeof(string));
    
            var itemStatusParameter = itemStatus != null ?
                new ObjectParameter("ItemStatus", itemStatus) :
                new ObjectParameter("ItemStatus", typeof(string));
    
            var selectedTypeListParameter = selectedTypeList != null ?
                new ObjectParameter("SelectedTypeList", selectedTypeList) :
                new ObjectParameter("SelectedTypeList", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_PreOrder_List_Result>("Main_PreOrder_List", locationParameter, dateRangeTypesParameter, fromDateParameter, toDateParameter, homeRoomParameter, customersSelectionTypeParameter, customersListParameter, gradeParameter, itemSelectionTypeParameter, itemStatusParameter, selectedTypeListParameter, pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<Main_PreOrder_Report_Result> Main_PreOrder_Report(string preorderIdsStr)
        {
            var preorderIdsStrParameter = preorderIdsStr != null ?
                new ObjectParameter("PreorderIdsStr", preorderIdsStr) :
                new ObjectParameter("PreorderIdsStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_PreOrder_Report_Result>("Main_PreOrder_Report", preorderIdsStrParameter);
        }
    
        public virtual ObjectResult<Main_PreOrder_TopSellingItemOverview_Result> Main_PreOrder_TopSellingItemOverview(Nullable<int> periodTypeID)
        {
            var periodTypeIDParameter = periodTypeID.HasValue ?
                new ObjectParameter("PeriodTypeID", periodTypeID) :
                new ObjectParameter("PeriodTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_PreOrder_TopSellingItemOverview_Result>("Main_PreOrder_TopSellingItemOverview", periodTypeIDParameter);
        }
    
        public virtual int ProcessPickupPreorderItems(Nullable<long> clientID, Nullable<long> cashierId, Nullable<System.DateTime> localDateTime, ObjectParameter result, ObjectParameter errorMsg)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var cashierIdParameter = cashierId.HasValue ?
                new ObjectParameter("CashierId", cashierId) :
                new ObjectParameter("CashierId", typeof(long));
    
            var localDateTimeParameter = localDateTime.HasValue ?
                new ObjectParameter("LocalDateTime", localDateTime) :
                new ObjectParameter("LocalDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcessPickupPreorderItems", clientIDParameter, cashierIdParameter, localDateTimeParameter, result, errorMsg);
        }
    
        public virtual ObjectResult<VoidItem_Result> VoidItem(Nullable<int> clientID, Nullable<int> iTEMID, Nullable<int> oRDERID, Nullable<int> oRDLOGID, Nullable<int> cUSTID, Nullable<int> oRDERTYPE)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var iTEMIDParameter = iTEMID.HasValue ?
                new ObjectParameter("ITEMID", iTEMID) :
                new ObjectParameter("ITEMID", typeof(int));
    
            var oRDERIDParameter = oRDERID.HasValue ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(int));
    
            var oRDLOGIDParameter = oRDLOGID.HasValue ?
                new ObjectParameter("ORDLOGID", oRDLOGID) :
                new ObjectParameter("ORDLOGID", typeof(int));
    
            var cUSTIDParameter = cUSTID.HasValue ?
                new ObjectParameter("CUSTID", cUSTID) :
                new ObjectParameter("CUSTID", typeof(int));
    
            var oRDERTYPEParameter = oRDERTYPE.HasValue ?
                new ObjectParameter("ORDERTYPE", oRDERTYPE) :
                new ObjectParameter("ORDERTYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VoidItem_Result>("VoidItem", clientIDParameter, iTEMIDParameter, oRDERIDParameter, oRDLOGIDParameter, cUSTIDParameter, oRDERTYPEParameter);
        }
    
        public virtual ObjectResult<VoidOrder_Result> VoidOrder(Nullable<int> clientID, Nullable<int> oRDERID, Nullable<int> oRDLOGID, Nullable<int> oRDERTYPE, Nullable<bool> vOIDPAYMENT)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var oRDERIDParameter = oRDERID.HasValue ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(int));
    
            var oRDLOGIDParameter = oRDLOGID.HasValue ?
                new ObjectParameter("ORDLOGID", oRDLOGID) :
                new ObjectParameter("ORDLOGID", typeof(int));
    
            var oRDERTYPEParameter = oRDERTYPE.HasValue ?
                new ObjectParameter("ORDERTYPE", oRDERTYPE) :
                new ObjectParameter("ORDERTYPE", typeof(int));
    
            var vOIDPAYMENTParameter = vOIDPAYMENT.HasValue ?
                new ObjectParameter("VOIDPAYMENT", vOIDPAYMENT) :
                new ObjectParameter("VOIDPAYMENT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VoidOrder_Result>("VoidOrder", clientIDParameter, oRDERIDParameter, oRDLOGIDParameter, oRDERTYPEParameter, vOIDPAYMENTParameter);
        }
    
        public virtual ObjectResult<Main_PreOrder_MenuItem_List_Result> Main_PreOrder_MenuItem_List(Nullable<int> categoryTypeID, Nullable<int> categoryID)
        {
            var categoryTypeIDParameter = categoryTypeID.HasValue ?
                new ObjectParameter("categoryTypeID", categoryTypeID) :
                new ObjectParameter("categoryTypeID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_PreOrder_MenuItem_List_Result>("Main_PreOrder_MenuItem_List", categoryTypeIDParameter, categoryIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Customers_SortedList")]
        public virtual IQueryable<Admin_Customers_SortedList_Result> Admin_Customers_SortedList(Nullable<long> clientID, string searchString, Nullable<int> searchBy, Nullable<bool> isAnyFilter, string schoolFilter, string gradeFilter, string homeRoomFilter, Nullable<bool> onlyActive, Nullable<bool> onlyAdult, Nullable<bool> excludeCashSale, Nullable<bool> isBalanceRequired, Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(int));
    
            var isAnyFilterParameter = isAnyFilter.HasValue ?
                new ObjectParameter("isAnyFilter", isAnyFilter) :
                new ObjectParameter("isAnyFilter", typeof(bool));
    
            var schoolFilterParameter = schoolFilter != null ?
                new ObjectParameter("SchoolFilter", schoolFilter) :
                new ObjectParameter("SchoolFilter", typeof(string));
    
            var gradeFilterParameter = gradeFilter != null ?
                new ObjectParameter("GradeFilter", gradeFilter) :
                new ObjectParameter("GradeFilter", typeof(string));
    
            var homeRoomFilterParameter = homeRoomFilter != null ?
                new ObjectParameter("HomeRoomFilter", homeRoomFilter) :
                new ObjectParameter("HomeRoomFilter", typeof(string));
    
            var onlyActiveParameter = onlyActive.HasValue ?
                new ObjectParameter("OnlyActive", onlyActive) :
                new ObjectParameter("OnlyActive", typeof(bool));
    
            var onlyAdultParameter = onlyAdult.HasValue ?
                new ObjectParameter("OnlyAdult", onlyAdult) :
                new ObjectParameter("OnlyAdult", typeof(bool));
    
            var excludeCashSaleParameter = excludeCashSale.HasValue ?
                new ObjectParameter("ExcludeCashSale", excludeCashSale) :
                new ObjectParameter("ExcludeCashSale", typeof(bool));
    
            var isBalanceRequiredParameter = isBalanceRequired.HasValue ?
                new ObjectParameter("IsBalanceRequired", isBalanceRequired) :
                new ObjectParameter("IsBalanceRequired", typeof(bool));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Customers_SortedList_Result>("[PortalContext].[Admin_Customers_SortedList](@ClientID, @SearchString, @SearchBy, @isAnyFilter, @SchoolFilter, @GradeFilter, @HomeRoomFilter, @OnlyActive, @OnlyAdult, @ExcludeCashSale, @IsBalanceRequired, @PageNo, @PageSize, @SortColumn, @SortOrder)", clientIDParameter, searchStringParameter, searchByParameter, isAnyFilterParameter, schoolFilterParameter, gradeFilterParameter, homeRoomFilterParameter, onlyActiveParameter, onlyAdultParameter, excludeCashSaleParameter, isBalanceRequiredParameter, pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<FetchBeginningBalance_Result> FetchBeginningBalance(Nullable<long> clientID, string searchString, string schoolFilter, string gradeFilter, string homeRoomFilter, string districtFilter, string sortColumn, string sortOrder)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var schoolFilterParameter = schoolFilter != null ?
                new ObjectParameter("SchoolFilter", schoolFilter) :
                new ObjectParameter("SchoolFilter", typeof(string));
    
            var gradeFilterParameter = gradeFilter != null ?
                new ObjectParameter("GradeFilter", gradeFilter) :
                new ObjectParameter("GradeFilter", typeof(string));
    
            var homeRoomFilterParameter = homeRoomFilter != null ?
                new ObjectParameter("HomeRoomFilter", homeRoomFilter) :
                new ObjectParameter("HomeRoomFilter", typeof(string));
    
            var districtFilterParameter = districtFilter != null ?
                new ObjectParameter("DistrictFilter", districtFilter) :
                new ObjectParameter("DistrictFilter", typeof(string));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchBeginningBalance_Result>("FetchBeginningBalance", clientIDParameter, searchStringParameter, schoolFilterParameter, gradeFilterParameter, homeRoomFilterParameter, districtFilterParameter, sortColumnParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<FetchDistinctGradesForGraduateSeniors_Result> FetchDistinctGradesForGraduateSeniors(Nullable<long> clientID, Nullable<long> schoolID, Nullable<long> districtID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("SchoolID", schoolID) :
                new ObjectParameter("SchoolID", typeof(long));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchDistinctGradesForGraduateSeniors_Result>("FetchDistinctGradesForGraduateSeniors", clientIDParameter, schoolIDParameter, districtIDParameter);
        }
    
        public virtual ObjectResult<FetchDistinctHomeRoomForBeginningBalance_Result> FetchDistinctHomeRoomForBeginningBalance(Nullable<long> clientID, Nullable<long> schoolID, Nullable<long> gradeID, Nullable<long> districtId)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("SchoolID", schoolID) :
                new ObjectParameter("SchoolID", typeof(long));
    
            var gradeIDParameter = gradeID.HasValue ?
                new ObjectParameter("GradeID", gradeID) :
                new ObjectParameter("GradeID", typeof(long));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchDistinctHomeRoomForBeginningBalance_Result>("FetchDistinctHomeRoomForBeginningBalance", clientIDParameter, schoolIDParameter, gradeIDParameter, districtIdParameter);
        }
    
        public virtual ObjectResult<FetchGraduateSeniors_Result> FetchGraduateSeniors(Nullable<long> clientID, string searchString, string schoolFilter, string gradeFilter, string districtFilter, string sortColumn, string sortOrder)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var schoolFilterParameter = schoolFilter != null ?
                new ObjectParameter("SchoolFilter", schoolFilter) :
                new ObjectParameter("SchoolFilter", typeof(string));
    
            var gradeFilterParameter = gradeFilter != null ?
                new ObjectParameter("GradeFilter", gradeFilter) :
                new ObjectParameter("GradeFilter", typeof(string));
    
            var districtFilterParameter = districtFilter != null ?
                new ObjectParameter("DistrictFilter", districtFilter) :
                new ObjectParameter("DistrictFilter", typeof(string));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchGraduateSeniors_Result>("FetchGraduateSeniors", clientIDParameter, searchStringParameter, schoolFilterParameter, gradeFilterParameter, districtFilterParameter, sortColumnParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<GRADUATESENIORS_Result> GRADUATESENIORS(Nullable<long> clientId, Nullable<int> cUSTID, Nullable<double> aLACARTE, Nullable<double> mEALPLAN, Nullable<int> sCHOOLID, Nullable<int> lUNCHTYPE, Nullable<bool> fULLDELETE, Nullable<int> cASHRESID)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(long));
    
            var cUSTIDParameter = cUSTID.HasValue ?
                new ObjectParameter("CUSTID", cUSTID) :
                new ObjectParameter("CUSTID", typeof(int));
    
            var aLACARTEParameter = aLACARTE.HasValue ?
                new ObjectParameter("ALACARTE", aLACARTE) :
                new ObjectParameter("ALACARTE", typeof(double));
    
            var mEALPLANParameter = mEALPLAN.HasValue ?
                new ObjectParameter("MEALPLAN", mEALPLAN) :
                new ObjectParameter("MEALPLAN", typeof(double));
    
            var sCHOOLIDParameter = sCHOOLID.HasValue ?
                new ObjectParameter("SCHOOLID", sCHOOLID) :
                new ObjectParameter("SCHOOLID", typeof(int));
    
            var lUNCHTYPEParameter = lUNCHTYPE.HasValue ?
                new ObjectParameter("LUNCHTYPE", lUNCHTYPE) :
                new ObjectParameter("LUNCHTYPE", typeof(int));
    
            var fULLDELETEParameter = fULLDELETE.HasValue ?
                new ObjectParameter("FULLDELETE", fULLDELETE) :
                new ObjectParameter("FULLDELETE", typeof(bool));
    
            var cASHRESIDParameter = cASHRESID.HasValue ?
                new ObjectParameter("CASHRESID", cASHRESID) :
                new ObjectParameter("CASHRESID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GRADUATESENIORS_Result>("GRADUATESENIORS", clientIdParameter, cUSTIDParameter, aLACARTEParameter, mEALPLANParameter, sCHOOLIDParameter, lUNCHTYPEParameter, fULLDELETEParameter, cASHRESIDParameter);
        }
    
        public virtual int FetchDistinctSchoolsForGraduateSeniors(Nullable<long> clientID, Nullable<long> districtID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FetchDistinctSchoolsForGraduateSeniors", clientIDParameter, districtIDParameter);
        }
    
        public virtual ObjectResult<Admin_BeginningBalance_Get_Result> Admin_BeginningBalance_Get(Nullable<long> clientID, string searchString, string schoolFilter, string gradeFilter, string homeRoomFilter, string districtFilter, string sortColumn, string sortOrder)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var schoolFilterParameter = schoolFilter != null ?
                new ObjectParameter("SchoolFilter", schoolFilter) :
                new ObjectParameter("SchoolFilter", typeof(string));
    
            var gradeFilterParameter = gradeFilter != null ?
                new ObjectParameter("GradeFilter", gradeFilter) :
                new ObjectParameter("GradeFilter", typeof(string));
    
            var homeRoomFilterParameter = homeRoomFilter != null ?
                new ObjectParameter("HomeRoomFilter", homeRoomFilter) :
                new ObjectParameter("HomeRoomFilter", typeof(string));
    
            var districtFilterParameter = districtFilter != null ?
                new ObjectParameter("DistrictFilter", districtFilter) :
                new ObjectParameter("DistrictFilter", typeof(string));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_BeginningBalance_Get_Result>("Admin_BeginningBalance_Get", clientIDParameter, searchStringParameter, schoolFilterParameter, gradeFilterParameter, homeRoomFilterParameter, districtFilterParameter, sortColumnParameter, sortOrderParameter);
        }
    
        public virtual int FetchDistinctSchoolsForGraduateSeniors1(Nullable<long> clientID, Nullable<long> districtID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FetchDistinctSchoolsForGraduateSeniors1", clientIDParameter, districtIDParameter);
        }
    
        public virtual ObjectResult<FetchDistinctSchoolsForGraduateSeniors2_Result> FetchDistinctSchoolsForGraduateSeniors2(Nullable<long> clientID, Nullable<long> districtID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchDistinctSchoolsForGraduateSeniors2_Result>("FetchDistinctSchoolsForGraduateSeniors2", clientIDParameter, districtIDParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Admin_Applications_SortedList")]
        public virtual IQueryable<Admin_Applications_SortedList_Result> Admin_Applications_SortedList(Nullable<long> clientID, string searchString, Nullable<int> searchBy, Nullable<System.DateTime> signedDateFilter, Nullable<int> approvalStatus, Nullable<bool> entered, Nullable<bool> updated, Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(int));
    
            var signedDateFilterParameter = signedDateFilter.HasValue ?
                new ObjectParameter("SignedDateFilter", signedDateFilter) :
                new ObjectParameter("SignedDateFilter", typeof(System.DateTime));
    
            var approvalStatusParameter = approvalStatus.HasValue ?
                new ObjectParameter("ApprovalStatus", approvalStatus) :
                new ObjectParameter("ApprovalStatus", typeof(int));
    
            var enteredParameter = entered.HasValue ?
                new ObjectParameter("Entered", entered) :
                new ObjectParameter("Entered", typeof(bool));
    
            var updatedParameter = updated.HasValue ?
                new ObjectParameter("Updated", updated) :
                new ObjectParameter("Updated", typeof(bool));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Admin_Applications_SortedList_Result>("[PortalContext].[Admin_Applications_SortedList](@ClientID, @SearchString, @SearchBy, @SignedDateFilter, @ApprovalStatus, @Entered, @Updated, @PageNo, @PageSize, @SortColumn, @SortOrder)", clientIDParameter, searchStringParameter, searchByParameter, signedDateFilterParameter, approvalStatusParameter, enteredParameter, updatedParameter, pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter);
        }
    
        [System.Data.Entity.DbFunctionAttribute("PortalContext", "Main_Items_View")]
        public virtual IQueryable<Main_Items_View_Result> Main_Items_View(Nullable<long> clientID, Nullable<int> orderID, Nullable<int> orderType)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(long));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var orderTypeParameter = orderType.HasValue ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Main_Items_View_Result>("[PortalContext].[Main_Items_View](@ClientID, @OrderID, @OrderType)", clientIDParameter, orderIDParameter, orderTypeParameter);
        }
    }
}
